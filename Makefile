# Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.


# Where to find user code.

SO_DIR = ../../../kid/bin/plugins

THIRD_PATH = ./../../mylib


LINK_PATHS = -L./

# Flags passed to the preprocessor.
CPPFLAGS += -isystem -shared -fPIC\

# Flags passed to the C++ compiler.
CXXFLAGS += -g  -Wextra -pthread -shared -fPIC

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
PLUGIN = $(SO_DIR)/core/core.so
                
INCLUDE_PATHS = -I/usr/local/include\
				-I$(THIRD_PATH)/public\
				 -I./../../third_party/breakpad/src\


# House-keeping build targets.

ALL_HEADERS = $(USER_HEADERS)
all : $(PLUGIN)

clean :
	rm -f $(PLUGIN)  *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
#GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
#gtest-all.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

#gtest_main.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

#gtest.a : gtest-all.o
#	$(AR) $(ARFLAGS) $@ $^

#gtest_main.a : gtest-all.o gtest_main.o
#	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

core.o : ./core.c ./core.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./core.c $(INCLUDE_PATHS)

buffer.o : ./buffer.c ./buffer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./buffer.c $(INCLUDE_PATHS)
	
parser_xml.o : ./parser_xml.c ./parser_xml.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./parser_xml.c $(INCLUDE_PATHS)
	
plugins.o : ./plugins.c ./plugins.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./plugins.c $(INCLUDE_PATHS)

base_thread.o : ./base_thread.c ./base_thread.h
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c ./base_thread.c $(INCLUDE_PATHS)
		
base_threadlock.o : ./base_threadlock.c ./base_threadlock.h
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c ./base_threadlock.c $(INCLUDE_PATHS)

base_threadpool.o : ./base_threadpool.c ./base_threadpool.h
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c ./base_threadpool.c $(INCLUDE_PATHS)

thread.o : ./thread.c ./thread.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./thread.c $(INCLUDE_PATHS)
	
network.o : ./network.c ./network.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./network.c $(INCLUDE_PATHS)

native_library.o : ./native_library.c ./native_library.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./native_library.c $(INCLUDE_PATHS)
		
clock_task.o : ./clock_task.c ./clock_task.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./clock_task.c $(INCLUDE_PATHS)
	
mig_log.o: $(THIRD_PATH)/public/log/mig_log.cc  $(THIRD_PATH)/public/log/mig_log.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/public/log/mig_log.cc $(INCLUDE_PATHS)
	
$(PLUGIN) : core.o buffer.o parser_xml.o plugins.o base_thread.o base_threadlock.o\
	base_threadpool.o thread.o network.o native_library.o clock_task.o mig_log.o\
	/usr/local/lib/libbreakpad_client.a /usr/lib64/libexpat.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LINK_PATHS) -levent -lpthread -lrt -lpthread -ldl \
	$^ -o $@